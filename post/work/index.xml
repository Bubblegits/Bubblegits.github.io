<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>奇技淫巧 on 张珙的博客</title>
    <link>https://bubblegits.github.io/post/work/</link>
    <description>Recent content in 奇技淫巧 on 张珙的博客</description>
    <image>
      <url>https://bubblegits.github.io/papermod-cover.png</url>
      <link>https://bubblegits.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 12 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://bubblegits.github.io/post/work/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>閱讀你的症狀</title>
      <link>https://bubblegits.github.io/post/work/%E9%96%B1%E8%AE%80%E4%BD%A0%E7%9A%84%E7%97%87%E7%8B%80/</link>
      <pubDate>Fri, 12 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://bubblegits.github.io/post/work/%E9%96%B1%E8%AE%80%E4%BD%A0%E7%9A%84%E7%97%87%E7%8B%80/</guid>
      <description>這篇文檔主要用來記錄我在日常生活中發現的自己身上的一些症狀，夢也被視作症狀，所以夢的內容也包括在其中。
2024年1月12日 在海外辦公室時臉部肌肉的抽搐——是爲了用笑來掩蓋攻擊性的欲望嗎？
詆毁L的偶像——實際上是因爲L在你心中的特殊地位？（不過說句題外話，以消費行爲來判斷人的個性是愚蠢的）</description>
    </item>
    
    <item>
      <title>赛博扬子居记</title>
      <link>https://bubblegits.github.io/post/work/%E8%B5%9B%E5%8D%9A%E6%89%AC%E5%AD%90%E5%B1%85%E8%AE%B0/</link>
      <pubDate>Mon, 08 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://bubblegits.github.io/post/work/%E8%B5%9B%E5%8D%9A%E6%89%AC%E5%AD%90%E5%B1%85%E8%AE%B0/</guid>
      <description>节物风光不相待，桑田碧海须臾改。
昔时金阶白玉堂，即今惟见青松在。
寂寂寥寥扬子居，年年岁岁一床书。
独有南山桂花发，飞来飞去袭人裾。
最近仓鼠症症状日渐加深，硬盘里存了一大堆学习资料，东一个西一个找起来很麻烦，于是就想着给它整理一下。正好室友装台式机，多出来了一个机箱，又从一个同学手上花800淘来了二手的主板和CPU，有了这些，要配齐一台简陋但能用的电脑花不了多少钱。专门用来做储存的话NAS（Net Attached Storage）再好不过了，偶然想到卢照邻在《长安古意》里写“寂寂寥寥扬子居，年年岁岁一床书”，鄙人的硬盘里学习资料何止一床，自比扬子倒也恰当。扬子名雄，其人在《汉书》有传。
雄少而好学，不为章句，训诂通而已，博览无所不见。为人简易佚荡，口吃不能剧谈，默而好深湛之思，清静亡为，少耆欲，不汲汲于富贵，不戚戚于贫贱，不修廉隅以徼名当世。家产不过十金，乏无儋石之储，晏如也。
值得一提的是，本文开头用了扬子典故的这首诗或许还是宝玉的丫鬟袭人名字的出处。《红楼梦》第二十三回贾政问起袭人
贾政问道：“袭人是何人？”王夫人道：“是个丫头。”贾政道：“丫头不管叫个什么罢了，是谁这样刁钻，起这样的名字？”王夫人见贾政不自在了，便替宝玉掩饰道：“是老太太起的。”贾政道：“老太太如何知道这话，一定是宝玉。”宝玉见瞒不过，只得起身回道：“因素日读诗，曾记古人有一句诗云：‘花气袭人知昼暖’。因这个丫头姓花，便随口起了这个名字。”王夫人忙又道：“宝玉，你回去改了罢。老爷也不用为这小事动气。”贾政道：“究竟也无碍，又何用改。只是可见宝玉不务正，专在这些秾词艳赋上作工夫。”
“花气袭人知昼暖”出自陆游《村居喜书》，当然不是所谓“秾词艳赋”，如果说袭人出自《长安古意》“飞来飞去袭人裾”，倒还比较合理，毕竟其中有“鸦黄粉白车中出，含娇含态情非一。妖童宝马铁连钱，娼妇盘龙金屈膝。”这样的句子。这样说来，袭人这名字也很不单纯，查“裾”字的意思，有的说是前襟有的说是后襟，总之是上衣的衣襟，而卢照邻诗中说的是桂花袭人裾，这里的袭只能按钻入的意思理解，袭人裾也就是钻入人的衣襟。至于钻入谁的衣襟，如何钻如衣襟，书中已经写明，不在话下。不过又想到诗中“昔时金阶白玉堂，即今惟见青松在”，“袭人”二字或许也是曹雪芹埋下的伏笔。
装机 从同学手里收的板U是微星B450M+AMD R5 3600，我又花了点钱给它配了两根4G内存条，一条256G固态，一张古董GT710显卡和一个400W的电源，总共加起来也就一千二三的样子。其实固态完全没必要，当时高估了校园网的速度想着做一个缓存。装机的时候有个失误，应该先把东西在主板上安好再拧主板螺丝，毕竟这个显卡也不大。宿舍地方还是太小，有点局促，把主板放到机箱里之后很多操作不好做。按部就班把电脑装好，一按开机键发现主板上CPU的debug灯亮着，重装CPU无果，网上找了一通发现短暂停电后恢复供电可以解决问题，不知道是什么原因，不过电脑总算是可以正常运行了。
安装黑群晖（Xpenology） 黑群最活跃的社区是Xpenology论坛，版本选择上可以参考https://xpenology.com/forum/topic/13333-tutorialreference-6x-loaders-and-platforms/，各个版本的差别主要在于是否支持NVMe缓存，CPU最大线程数等等。由于我没有集显，就选择了6.1.7版本的3617x。装系统首先要有个boot，也就是引导文件，论坛里最著名的引导文件是一个叫Jun的老哥制作的，安装教程参考https://xpenology.com/forum/topic/7973-tutorial-installmigrate-dsm-52-to-61x-juns-loader/。制作好引导U盘之后猛按del进入bios，把u盘设在boot第一位（不设可能也行，毕竟只有这一个boot），之后就可以远程操作了。
网络相关问题 其实搭建过程中最折腾的是网络，倒逼我把各种网络知识学了一遍。配置ip地址的时候要用子网掩码确定网段，不在一个网段里的计算机不能相互通信，这点是最重要的，只要能把局域网上的计算机ping通，剩下的都好说。局域网中计算机的IP地址通常是由DHCP协议分配的，在windows系统下可以通过arp -a指令来查看。关于子网掩码的知识可以参考https://zh.wikipedia.org/wiki/%E5%AD%90%E7%BD%91。群晖初始化的原理估计是boot后的主机会在网络局域网上广播特定的包，synology assistant可以将其识别从而与之建立联系。由于寝室的有线网孔是坏的，我花40买了一个交换机，把自己的几台电脑连在一起。6.1.7版本的黑群晖比较老，支持的无线网卡大多停产了，淘了一张二手的D-link DWA-140显卡，下载最快也只有1Mb/s，不过够用就好，下载速度慢正好保护硬盘，秉持黄老之道，轻傜薄赋，与盘休息。
初步使用 西数的紫盘是CMR，价格也不贵，买了一个装上，群晖会在每个硬盘里都装一套系统，所以硬盘要初始化一下，设置raid类型和分区等等，之后就可以使用了。在套件中心安装docker套件，按网上教程在docker中挂载transmission（端口9091）用来做BT下载，还挂载了calibre-web套件来管理书籍。calibre-web干净清爽，上传便捷，数据安全，支持书籍格式转换，几乎让我戒掉了买纸质书的陋习。有些epub可能没有封面，在其中加入cover.xhtml文件并输入
1 2 3 4 5 6 7 &amp;lt;html xmlns=&amp;#34;http://www.w3.org/1999/xhtml&amp;#34; xml:lang=&amp;#34;en&amp;#34;&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Cover&amp;lt;/title&amp;gt;&amp;lt;style type=&amp;#34;text/css&amp;#34; title=&amp;#34;override_css&amp;#34;&amp;gt; @page {padding: 0pt; margin:0pt} body { text-align: center; padding:0pt; margin: 0pt; } div { margin: 0pt; padding: 0pt; } &amp;lt;/style&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;div&amp;gt; &amp;lt;img src=&amp;#34;cover.jpg&amp;#34; alt=&amp;#34;cover&amp;#34;/&amp;gt; &amp;lt;/div&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt; 然后添加封面图片为cover.jpg即可。
一些问题 用了一段时间后遇到了无法安装套件的问题，尝试了很久也没法解决，另外docker上的transmission插件时不时和tracker断开连接。而且本来电脑有一个PCLe接口的无线网卡，由于驱动不支持也用不上，以致网速如此之慢。用了一段时间后决定改用ubuntu。安装ubuntu还是费了一番功夫，反思一下觉得应该主要以官方文档为依据，博客文章毕竟比较琐碎跳跃，可供参照阅读。
转投Ubuntu 在清华镜像站下载ubuntu desktop20.04，用balenaEtcher把iso文件烧录进U盘。插盘，开机，成功进入boot程序，但安装系统时花屏。查询之后发现原因在于ubuntu会默认载入显卡驱动，而古董GT710大概和自动载入的驱动不适配。通过nomodeset选项可以阻止boot程序载入显卡驱动，boot完成后ubuntu会自动安装适配的显卡驱动。
首先在boot启动后选择安装menu里面光标移到install ubuntu，不要点回车，点e，进入grub编辑页面。
把linux选项后面 quiet splash &amp;mdash; 改为 quite splash nomodeset</description>
    </item>
    
    <item>
      <title>建站心路历程</title>
      <link>https://bubblegits.github.io/post/work/%E5%BB%BA%E7%AB%99%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/</link>
      <pubDate>Sat, 06 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://bubblegits.github.io/post/work/%E5%BB%BA%E7%AB%99%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/</guid>
      <description>这个博客网页是依赖hugo搭建在github上的。从建站到修缮，前前后后遇到了很多问题，期间还从mac转到了Windows。但本人凭借高超的智慧与坚定的毅力，种种困难被一一克服，在这里把战果总结一下。过程中主要参考Hugo Documentation | Hugo (gohugo.io)，PaperMod | Hugo Themes (gohugo.io)
Git搭建 mac上的git是我在捣鼓vscode的时候意外装上的。由于只有我一个人管理博客网站，所以git操作起来简单很多。上传时在git add .,git commit -m之后直接用git push --force覆盖远程就好，不会出现冲突。从云端同步的话可以直接用git fetch --all &amp;amp;&amp;amp; git reset --hard origin/main	。不过偶尔会有在某一端编辑了之后忘记同步的情况，或许可以考虑为不同设备创建不同branch，但长期计划是把博客迁移到自建服务器上，所以目前还是不折腾了。git add, commit如果想的话包括git push都可以通过alias合成一行
1 git config --global alias.cm &amp;#39;!f() { git add -A &amp;amp;&amp;amp; git commit -m &amp;#34;$@&amp;#34;; }; f&amp;#39; 从myblog仓库推到bubblegits仓库出问题多半是因为token过期了，少数情况是workflow文件里的包版本太低，更新一下就好。
初步搭建 参考hugo博客搭建，评论系统可以参考https://www.cestlavie.moe/posts/hello-hugo
config文件 .yml(或.yaml)格式比.toml易读很多，推荐使用。可以直接使用根目录的config.yaml，也可以创建config文件夹方便管理。在config文件夹内，默认使用的路径是config\_default，可以通过与_default平行的不同文件夹来储存多套设置文件。文件夹内除config.yaml外，还可以存放其他文件，如param.yaml，此时在config.yaml里无需写入param相关设置，param.yaml里直接写入param相关设置，无需在第一级加param:。
关于yaml文件的使用还有一些需要注意的地方，可以参考这篇文章（不知道为什么这个网页总跳一刀999的广告），主要的几点包括缩进格式、文本段格式等等。
时间 逝者如斯夫！不舍昼夜。
hugo中默认的时间参数有如下几种
1 2 3 4 - date - publishDate - lastmod - expiryDate hugo在生成网页时会忽略publishDate晚于现在和expiryDate早于现在的文档。
默认date的表示方式为“yyyy-MM-dd”，其他方式表达的时间不会被识别。对于一个post页面而言，date是一个环境变量，.md文件开头写的date:是一个frontmatter变量，环境里的date默认读取frontmatter里的date，但也可以通过config.yaml使其读取其他变量，如：
1 2 3 4 frontmatter: date: - myDate - :default 表示优先读取myDate，若不存在则按默认方式顺序读取。</description>
    </item>
    
    <item>
      <title>LaTeX使用指南</title>
      <link>https://bubblegits.github.io/post/work/latex%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</link>
      <pubDate>Mon, 25 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://bubblegits.github.io/post/work/latex%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</guid>
      <description>2023年9月25日更新：最近从LaTeX转用Typst，方便许多，故下面这篇文章的历史使命已经完成了。
自从用了latex之后，夜夜笙歌，乐不思蜀，再也不想看word一眼。我终于可以告别莫名奇妙的自动编号，不知道哪里冒出来的横线竖线和牵一发而动全身的图片，而去清晰明了，一切尽在掌控的世界生活了。下面是latex使用过程中我总结出的一些经验。内容主要参考CTAN: Comprehensive TeX Archive Network，尤其是其中的lshort-zh-cn.pdf - 清华大学云盘 (tsinghua.edu.cn)。所有操作都是在Overleaf, Online LaTeX Editor中用XeLaTeX完成的。
一套模板 经过短期摸索，弄出了一套日常适用的模板，记在下面
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 \documentclass{article} \usepackage[utf8]{inputenc} \usepackage{geometry}[a4paper, total={2in, 3in}] \usepackage{graphicx} \usepackage{caption} \newcommand{\upcite}[1]{\textsuperscript{\cite{#1}}} % 标注参考文献为上标 \usepackage{xeCJK} \setCJKmainfont{AR PL UKai CN} % 修改字体 \newCJKfontfamily\songti{AR PL SungtiL GB} \usepackage{wrapfig} \linespread{1.</description>
    </item>
    
    <item>
      <title>用户你说句话啊</title>
      <link>https://bubblegits.github.io/post/work/%E7%94%A8%E6%88%B7%E4%BD%A0%E8%AF%B4%E5%8F%A5%E8%AF%9D%E5%95%8A/</link>
      <pubDate>Sun, 24 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://bubblegits.github.io/post/work/%E7%94%A8%E6%88%B7%E4%BD%A0%E8%AF%B4%E5%8F%A5%E8%AF%9D%E5%95%8A/</guid>
      <description>随着我在github上摸爬滚打的经验增加，现阶段我信息技术成长方面的主要矛盾已经转变为日益增长的命令语句使用需要以及我不娴熟的命令语句使用技巧之间的矛盾。命令语句有种在和电脑说话的感觉，用起来很方便，习惯了以后感觉以前依赖图形界面的操作方式像是《百年孤独》所说：“世界新生伊始，许多事物还没有名字，提到的时候尚需用手指指点点。”
Windows Terminal（WT） Windows Terminal颜值比cmd高出不少，而且有点图形界面，更加易用，装些脚本用着还是很舒服的。WT中常用的shell是window powershell,关于Terminal，shell等等用词之间的区别可以参考https://www.zhihu.com/question/21711307/answer/2231006377。不过WT的一个麻烦之处在于安装很多环境的时候不会自动添加Path变量，要手动添加一下才能用，可以用$env:path查看环境变量。
windows上可以用winget管理安装包，但我感觉没什么必要，因为windows有分区，本来用两三级就可以写出来的程序路径一用winget就变得老长，反而麻烦。自己装一下python，node.js和git也就基本够用了。
在使用git clone时可能会遇到git clone: error setting certificate verify locations这样的错误提示，此时只要设置git config --global http.sslverify &amp;quot;false&amp;quot;跳过ssl认证就好了，不过这个解决方案有点鸵鸟，有空还是应该把证书文件更新一下。有的时候在pip install中还会弹出关于ssl的警告，十有八九是代理的问题，关了就好。
windows上可以写bat批处理文件来自动执行一系列命令，比如我为了一键同步git仓库写了一个git.bat文件
1 2 3 4 5 6 7 @echo off cd C:\Users\qipao\Desktop\myblog git pull git cmp refine cd C:\Users\qipao\Desktop\tiddlywiki git pull git cmp refine shell 的使用的时候要注意提示符，参考http://c.biancheng.net/view/734.html
Terminal on Mac Mac上自带了终端，颜值大概介于cmd和WT之间吧。Homebrew很好用，因为我本来就没心情去管mac的文件系统，正好homebrew帮我包办代替了，不过有的时候还是不得不找些文件，mac的文件目录可以参考https://www.cnblogs.com/gujiande/p/9447006.html。我的mac默认使用zsh shell，配置文件在用户的家目录下，通过command+shift+.查看隐藏文件就能看到，通常修改.zshrc文件。一些常用命令可以通过alias来快速输入，句法是alias A=B，注意在使用shell的时候不要随便加空格。
homebrew常用的命令是brew install和brew info，大部分包如果安上之后有问题，可以brew info看一下简介，比如装java过后要设定一个路径，在brew info java里提供了可以直接照抄的代码。
mac上可以用.command文件做批处理，比如这个git.command
1 2 3 4 5 6 7 8 9 cd /Users/a_big_apple/Desktop/myblog git pull git cm &amp;#34;refine&amp;#34; git push cd /Users/a_big_apple/Desktop/tiddlywiki git pull git cm &amp;#34;refine&amp;#34; git push exit 之后要用chmod +x filename赋可执行权限。</description>
    </item>
    
    <item>
      <title>所以我放弃了Windows</title>
      <link>https://bubblegits.github.io/post/work/%E6%89%80%E4%BB%A5%E6%88%91%E6%94%BE%E5%BC%83%E4%BA%86windows/</link>
      <pubDate>Tue, 18 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://bubblegits.github.io/post/work/%E6%89%80%E4%BB%A5%E6%88%91%E6%94%BE%E5%BC%83%E4%BA%86windows/</guid>
      <description>人是铁逼是钢，一顿不装憋得慌，出于装逼的迫切需要本来想在电脑上试试linux，但糟糠之妻不下堂，windows陪伴我多年，我对它毕竟感情深厚，难以割舍。 春宵苦短，好景不长，天有不测风云，暑期学习报了一门讲生物信息学的课，教材上赫然写着
由于历史原因，就生物信息数据分析而言，linux操作系统的软件生态比windows好得多，有很多生物信息的工具只支持linux系统。所以熟悉linux操作系统的使用对于学习生物信息是很有必要的。
Windows卿卿如晤：吾今以此书与汝永别矣！
WSL 其实也算不上永别，在windows上装wsl还是很方便，不需要GUI的话别的需求基本上可以满足，印证了那句“Microsoft ♥ Linux”。
首先在命令行中做相关设置
1 2 3 dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart # Deployment Image Servicing and Management (DISM.exe) is a command-line tool that can be used to service and prepare Windows images. </description>
    </item>
    
    <item>
      <title>爬邺架</title>
      <link>https://bubblegits.github.io/post/work/%E7%88%AC%E9%82%BA%E6%9E%B6/</link>
      <pubDate>Thu, 06 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://bubblegits.github.io/post/work/%E7%88%AC%E9%82%BA%E6%9E%B6/</guid>
      <description>邺架轩公众号原来的推送不知道是怎么做的，底下的宣传信息迁移的时候经常出问题，于是我决定用markdown+css的方法重新做一个模版，从互联网上到处借鉴，做出了一个百纳衣css，把其中比较关键的几段在下面作个解释。
1 2 3 4 5 6 img { width: 200px; height: 300px; margin: auto; display: block; } 这一段是控制图片大小和居中的，img元素必须要变成block之后才能作调整。如果有某几张图片有特殊要求，可以通过html单独设置格式，比如抖音账号二维码被我设置成了
1 &amp;lt;img src=&amp;#34;http://mmbiz.qpic.cn/mmbiz_jpg/icIibcZIFTavvVMe1cxvPNvyK3nzVgWeR9CQRpwE3Un9wD3r3lAjIkcpaib9plqN14JC0CGRV6pDkB8Kpm62Xx56g/0&amp;#34; alt = &amp;#34;douyin&amp;#34; style=&amp;#34;height:400px;width:300px&amp;#34;/&amp;gt; 下面这段是设置粗体颜色和标题位置的
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 strong { color: #FF992A; } h1, h2, h3, h4, h5, h6 { position: relative; margin-top: 1rem; margin-bottom: 1rem; font-weight: bold; line-height: 1.4; cursor: text; text-align: center; } 用markdown+CSS有一个问题，markdown导入图片默认使用的是本地url，要发布到微信公众号必须把图片挂载到公众号的图床。这篇文章给出了完美的解决方案，注意typora必须在设置界面测试图床才能看到报错信息。</description>
    </item>
    
    <item>
      <title>墨水屏阅读</title>
      <link>https://bubblegits.github.io/post/work/%E5%A2%A8%E6%B0%B4%E5%B1%8F%E9%98%85%E8%AF%BB/</link>
      <pubDate>Wed, 14 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://bubblegits.github.io/post/work/%E5%A2%A8%E6%B0%B4%E5%B1%8F%E9%98%85%E8%AF%BB/</guid>
      <description>大家都知道我最喜欢的电子产品就是墨水屏了，现在我已经拥有墨水屏的手机，墨水屏的阅读器，墨水屏的显示器，但我还没有墨水屏的内裤&amp;hellip;
我确实有墨水屏的手机，墨水屏的阅读器和墨水屏的显示器，对我娇嫩的双眼来说，墨水屏比LCD屏幕友好很多。而且热心的网友也开发了很多工具帮助提升墨水屏的使用体验，多数发布在mobilereads论坛。
KOBO libra 2 我的老kindle paperwrite用了四五年，虽说尚且能饭，但2021年惊闻kindle书城退出中国市场，顿生喜新厌旧之感，于是想着买一个高逼格的小众电子书阅读器，看中了KOBO libra 2。kobo的系统基本上就是linux，很开放，可以装不少有意思的东西。
nickel menu nickel menu可以用来管理kobo上安装的插件，同时带有一些小功能，比如导出注释，白板和小游戏。导出注释的功能不尽如人意，一般还是用koreader。
koreader koreader是我用过的最优秀的软件之一，很多自己拍脑袋想出来的需求，研究一下发现KOreader靠集思广益的用户社区已经实现了，比如页面滚动，自定义状态条，甚至可以从程序内调用终端等等，称得上是开源软件的模范。
不过有几个小问题，比如翻译功能只支持调用谷歌翻译，导致在国内不能正常访问，之前可以通过改hosts解决，但现在国内也没有可用的ip了。
KOReader是支持代理的，具体是在【上方菜单 - 齿轮图标 - 网络设置】里，如果自己有代理的话可以设置下，但是普通的http代理翻墙很困难，shocks代理koreader似乎不支持。
koreader的高亮可以直接导出成markdown，不过格式不好看，可以用正则表达式修改，一般用如下几条：
1 2 ###(.*) #匹配三级标题行 * #匹配斜体标志 VScode里支持用正则表达式跨行进行调整，typora似乎做不到这一点。
pdf阅读 koreader可以裁剪pdf并且自定义翻页方式，这样不需要太大的屏幕也能阅读pdf，不过在OCR上遇到了一点困难。github上开源的ocrmypdf用的是tesseract引擎，效果差强人意，以一个字体略有锯齿的《当代英雄》扫描版序言第一段为例
不论 什么 书 ， 序 言 总 是 写 于 最 后 而 放 在 最 前。 它 或 者 用 来 说 明 写 作 的 目的 ， 或 者 作为 对 批评 的 答辩 。 但 读者一 般 并 不 关心 道德 的 宣扬 和 刊物 上 的 攻击 ， 因 此 他 们 不 看 序言 。 这 种 情况 很 使 人 感到 遗 盾 ， 特 别 是 在 我 们 这 儿 。 我 们 的 公众 还 很天 真 单纯 ，如 果 寅 言 的 结尾 不 来上几 句 训 论 ， 他们就 看 不 懂 。 他 们 体会不 出 戏 让 , 感 党 不 到 讽刺 ; 他 们 简直没有 受过 很 好 的 教育 。 他 们 还 不 知道 ， 在 规 规矩 抢 的 社会 里 和 规 规 矩 矩 的 书本 里 ,不 可 以 公然 误 骂 , 而 且 现代 文明 已 发 明了 一 种 比 误 骂 更 锋利 的 武器 一 一 这 种 武器 可 以 说 是 无 形 的 ， 因 此 也更 加 致命 ， 往 往 在 甜言蜜语 的 掩盖 下 给 人 以 无 法 抵抗 的 切中 要 害 的 打击 。 我 们 的 公众 好 象 外 省 居民 ， 昕 了 两 个 敢 对 宫廷 的 外 交官 的 谈话 ， 就 满 以 为 他们 由 于 私 谊 深厚 而 各 自在 欺骗 本 国 政府 。</description>
    </item>
    
    <item>
      <title>影音相关</title>
      <link>https://bubblegits.github.io/post/work/%E5%BD%B1%E9%9F%B3%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Thu, 01 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://bubblegits.github.io/post/work/%E5%BD%B1%E9%9F%B3%E7%B3%BB%E7%BB%9F/</guid>
      <description>缘起 闲来无事捣鼓家里的投影仪，拿了一个闲置的笔记本电脑作为解码器，想要实现以下功能：
观看电视节目直播和回放 从pt站下载电影并播放 如果能把笔记本变成nas给其他设备用就再好不过了（2023年6.1更新：已经有NAS了，见《赛博扬子居记》） 为了让整个解决方案的造型不太简陋，选择了kodi作为播放器。在kodi的配置之中遇到的一些问题如下：
kodi配置 kodi的前身是xbmc（Xbox media center），官网和插件库国内访问网络质量堪忧，即使扶墙也常常出问题，所以找个镜像比较方便。清华大学的镜像站用着总觉得没有中科大的顺手。访问Index of /xbmc/ (ustc.edu.cn)，在releases目录下下载安装包，安装完成后还要注意配置插件库，官方的插件库访问常常出问题，可以选择用镜像的插件库，或者用官方库霸王硬上弓，多试几次也能装上。
kodi中可以通过PVR IPTV simple client来读m3u源，github上有一个可直连的m3u库https://github.com/fanmingming/live。iptv源可以搭配epg（electric program guide）使用，epg提供节目单从而在部分iptv源上实现回看功能。
kodi变成中文需要先把字体改为arial base，否则无法显示汉字。
iptv源 网上的iptv源良莠不齐，可以自己从机顶盒抓取iptv源来看，参考https://mozz.ie/posts/extracting-iptv-live-streams/
影视信息刮削 此外kodi的一个非常拉风的功能是电影海报墙，通过刮削器获取电影简介、年代、海报、类型等相关信息并展示出来，有逼不装天理难容。但是kodi自带的刮削器常常遇到网络问题，可以选择3.x版本的tmm（tiny media manager）在影视文件夹中生成nfo文件，用kodi读取nfo文件从而生成海报墙。tmm的使用方法一目了然，除了刮削之外还可以用来整理电影文件，我的习惯是把电影放在以导演命名的文件夹下。
与tmm相似的还有一个好东西叫Movie_Data_Capture,功能不便多说，一用便知。
音乐库 人的生命是有限的，但折腾的事业是无限的，折腾完电影之后接着折腾音乐。mac上的music软件一大问题就是语言显示混乱，整理自己导入的音乐表现倒是不错，可以给专辑搜索封面，aiff格式用起来也挺顺耳。</description>
    </item>
    
    <item>
      <title>雅思作文练习</title>
      <link>https://bubblegits.github.io/post/work/%E9%9B%85%E6%80%9D%E4%BD%9C%E6%96%87%E7%BB%83%E4%B9%A0/</link>
      <pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://bubblegits.github.io/post/work/%E9%9B%85%E6%80%9D%E4%BD%9C%E6%96%87%E7%BB%83%E4%B9%A0/</guid>
      <description>IELTS11 Test1 writing Task1 The figure shows water consumption for industrial, agricultural and domestic proposes in six areas around the world: North America, South America, Europe, Africa, Central Asia and Southeast Asia.
In North America and Europe, water used in industry accounts for nearly half of total water consumption, and agriculture take up one-third of water. The percentage of domestic water consumption is around 15 percent, which ranks high among all the areas.</description>
    </item>
    
    <item>
      <title>修麦克风</title>
      <link>https://bubblegits.github.io/post/work/%E4%BF%AE%E9%BA%A6%E5%85%8B%E9%A3%8E/</link>
      <pubDate>Tue, 17 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://bubblegits.github.io/post/work/%E4%BF%AE%E9%BA%A6%E5%85%8B%E9%A3%8E/</guid>
      <description>电脑的麦克风总是出问题，有的时候声音太小，有的时候又有莫名其妙的背景噪音。今天下午痛下杀手，把这个问题彻底解决了。
之前买过外接麦克风，对解决问题没什么帮助，所以初步判断问题应该是出在声卡上。设备管理器里查看声卡型号需要一些设置。
打开设备管理器的声音、视频与游戏控制器一栏，发现声卡是msi板载的realtek声卡，但看不到具体型号。右键点开属性-详细信息，把属性一栏改为硬件id，查看DEV_后数字。如图得到声卡型号为realtek ALC298.
瑞昱官方给声卡配置设计的图形交互软件是Realtek High Definition Audio Manager，小时候在电脑上见过，但现在官方给出的驱动基本上都不包含这个软件了。尝试下载了一个包含manager的古早版本驱动，发现manager虽然可以用但声音质量很差，于是作罢。
上msi官网查询发现，官方给的装法是首先装only driver的驱动程序，然后装nahimic作为配置声卡的图形程序。之前用nahimic的时候经常声音微弱，后来把nahimic连驱动一起卸了。通过只装only driver驱动，最终解决了问题。</description>
    </item>
    
    <item>
      <title>biochemistry II</title>
      <link>https://bubblegits.github.io/post/work/%E7%94%9F%E5%8C%962%E5%A4%8D%E4%B9%A0/</link>
      <pubDate>Sun, 08 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://bubblegits.github.io/post/work/%E7%94%9F%E5%8C%962%E5%A4%8D%E4%B9%A0/</guid>
      <description>Chapter 13 Bioenergetics and biochemical reaction types Recall a basic formula that defines free energy G in chemistry: $$ ΔG = ΔH-TΔS $$ where $H$ stands for enthalpy and $S$ stands for entropy. As for biological reactions, they happen in a relatively fixed range of temperature, and $ΔS$ is determined by reactants and products, so $ΔG$ value changes according to ΔH (which is often determined by the amount of ATP in the reaction).</description>
    </item>
    
    <item>
      <title>概率论与数理统计复习</title>
      <link>https://bubblegits.github.io/post/work/%E6%A6%82%E7%BB%9F/</link>
      <pubDate>Mon, 02 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://bubblegits.github.io/post/work/%E6%A6%82%E7%BB%9F/</guid>
      <description>概率论是关于情形与概率对应的理论，随机变量描述了一个具体情形与数的对应，而分布函数（或者密度函数）描述了一个数与概率的对应。
关于赌金分配问题 抛硬币，正面甲得一分，反面乙得一分，先得10分者获胜，现抛出8次正面，7次反面，问各自获胜概率为多少？
对于一个样本空间而言，其中的每一个元素（构成的集合）不一定是等概率的——直接的例子是一个包含“彩票中奖”和“彩票不中奖”这两个元素的。样本空间是被主观确定的，对于一个概率问题而言可以有多种样品空间。
对上面这个问题，可以采用两种样本空间：
（1）{HH, HTH, THH, TTT, HTTH, THTH, TTHH, HTTT, THTT, TTHT}（H表示正面，T表示反面，此为决出赢家的所有可能经过。）
（2）抛4次硬币出现的所有可能结果。(共16种)
注意在（1）中，HH与HTH的概率是不同的，前者为1/4，后者为1/8，HTTH的概率则为1/16。而在（2）中，样本空间的每一个元素概率都相等。这是因为我们认为对于一个硬币而言，抛出正面和反面的概率均为1/2。对于事件“甲获胜”，不妨把它记为A，在样本空间（1）中 $$ A={HH,HTH,THH,HTTH,THTH,TTHH}\ $$ 而在样本空间（2）中 $$ A={HHTT,HHHT,HHTH,HHHH,HTHT,HTHH,THHT,THHH,HTTH,THTH,TTHH} $$ HHHH这种情况，实际上是不可能出现的，因为早在第二次出现正面时，赌局就结束了。但是这并不妨碍我们把它作为A中的一个元素，因为在这个通过我们的想象扩展了的样本空间里面，规则是：如果出现多于一次正面，则甲获胜。这样做的好处是，我们可以构造出一个所有元素等概率的样本空间，两个事件的概率比就是其元素数目之比。
最近惊闻炉石传说决定关服，想起小时候困扰我的一个问题：
奥术飞弹打死精灵龙的概率是多少？
条件概率 条件概率实际上给我们日常语言中的“条件”二字作了数学上定义，当我们说A在事件B发生的条件下发生，我们其实构造了这样一个事件$A|B$，这个事件在与原来一致的样本空间$Ω$中满足： $$ P(A|B)=\frac{P(A\cap B)}{P(B)} $$ 但这最多只能算是一个记号，因为单靠概率值并不能唯一确定一个事件。$P(A|(B|C))$这样的记号是是非法的。
或者我们也可以认为我们并没有构造一个新的事件，而只是把样本空间缩小了。我们新的样本空间$Ω^{&amp;rsquo;}$满足 $$ Ω^{&amp;rsquo;}=Ω\cap B\ so\space P_Ω(A|B)=P_{Ω^{&amp;rsquo;}}(A) $$ 这种理解更加符合我们的直觉。我们的意识总是注意个别事物，可以为个别事物而改造样本空间。在这种理解方式下，前面的分式形容了一种正规化的过程，也就是把B发生的概率视作1。
这样我们可以定义$P(A|(B|C))$，它实际上就是$P(A|(B\cap C))$，我们考虑的是由B和C都发生的情形构成的样本空间。
独立事件 从而我们可以明白事件独立在样本空间上的含义。它是形容在老的样本空间和新的样本空间中，事件A发生的概率不变。如果我们拿可数的样本空间作为例子，可以说发生事件A的情形在所有情形中的占比和在发生事件B的情形中占比一致，当然这里所说的比例是以各情形的概率加权后的比例。对于不可数样本空间上的问题，可以借助联合密度函数思考。(两个)事件独立的定义是： $$ P(A\le x, B\le y)=P(A\le x)P(B\le y) $$ 表示成联合密度函数的形式则是：
$$ \int^{y}{-\infin}\int^{x}{-\infin}f(u,v)dudv=\int^{\infin}{-\infin}\int^{x}{-\infin}f(u,v)dudv\int^{y}{-\infin}\int^{\infin}{-\infin}f(u,v)dudv $$
等式两边同时求两次导可得
$$ f(u,v)=\int^{\infin}{-\infin}f(u,v)du\int^{\infin}{-\infin}f(u,v)dv $$
注意X，Y相关并不意味着在联合密度函数的两个自变量之间存在函数关系。
分布函数与密度函数 我从How is the minimum of a set of random variables distributed上找到一个关于分布函数和密度函数的有趣例子：</description>
    </item>
    
    <item>
      <title>更改账户名路径为英文</title>
      <link>https://bubblegits.github.io/post/work/%E6%9B%B4%E6%94%B9%E8%B4%A6%E6%88%B7%E5%90%8D%E8%B7%AF%E5%BE%84%E4%B8%BA%E8%8B%B1%E6%96%87/</link>
      <pubDate>Tue, 20 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://bubblegits.github.io/post/work/%E6%9B%B4%E6%94%B9%E8%B4%A6%E6%88%B7%E5%90%8D%E8%B7%AF%E5%BE%84%E4%B8%BA%E8%8B%B1%E6%96%87/</guid>
      <description>用Rstudio经常报错，研究了一下发现原因是工作目录在以用户名命名的路径下，而用户名是中文，导致在部分软件里路径不能被识别。简单几个步骤就可以修复问题。
管理员身份打开cmd，输入命令net user administrator /active:yes，注销账户后进入administrator账户，修改C:\Users路径下中文文件名为英文，而后win+R输入regedit进入注册表，在HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Profilelist目录下把“数据”一栏为原先中文路径的项目改为与文件夹名匹配的英文路径。
大功告成，切回原来账号之后记得net user administrator /active:no禁用adminstrator账号。</description>
    </item>
    
    <item>
      <title>biochemistry experiment</title>
      <link>https://bubblegits.github.io/post/work/%E7%94%9F%E5%8C%96%E5%AE%9E%E9%AA%8C%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/</link>
      <pubDate>Fri, 16 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://bubblegits.github.io/post/work/%E7%94%9F%E5%8C%96%E5%AE%9E%E9%AA%8C%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/</guid>
      <description>Preparation &amp;amp; Separation The target protein used in biochemistry experiment usually comes from three kinds of source, natural tissue, recombinant protein in certain expression system or cell culture.
Our research target may be natural or recombinant. If it is natural, the situation looks like this: I have some cell, and things I want (proteins, nuclear acid, etc.) are in the cell. I don&amp;rsquo;t need to be a genius to see that I need to break the cell.</description>
    </item>
    
  </channel>
</rss>
